def simulate_network(requests, max_packets, rate):
    total_dropped = 0
    queue = []
    
    for time, num_packets in requests:
        queue = [t for t in queue if t > time - rate]
        
        if len(queue) + num_packets > max_packets:
            dropped_packets = len(queue) + num_packets - max_packets
            total_dropped += dropped_packets
            num_packets -= dropped_packets
        
        queue.extend([time] * num_packets)
    
    return total_dropped

# Test cases
test_cases = [
    ([[1, 5], [2, 3], [4, 6]], 10, 2),
    ([[0, 10], [1, 5], [2, 7], [3, 3], [4, 8]], 15, 3),
    ([[0, 3], [2, 5], [4, 2]], 7, 2),
    ([[0, 1], [1, 2], [2, 3], [3, 4], [4, 5]], 5, 1)
]

# Run test cases
for i, (requests, max_packets, rate) in enumerate(test_cases):
    dropped_packets = simulate_network(requests, max_packets, rate)
    print(f"Test case {i+1}: Total number of dropped packets = {dropped_packets}")
